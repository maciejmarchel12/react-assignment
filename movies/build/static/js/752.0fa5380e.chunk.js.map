{"version":3,"file":"static/js/752.0fa5380e.chunk.js","mappings":"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","sources":["components/reviewForm/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 2,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"left\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    \"& > * \": {\r\n      marginTop: 2,\r\n    },\r\n  },\r\n  textField: {\r\n    width: \"40ch\",\r\n  },\r\n  submit: {\r\n    marginRight: 2,\r\n  },\r\n  snack: {\r\n    width: \"50%\",\r\n    \"& > * \": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n};\r\n\r\nconst ReviewForm = ({ movie }) => {\r\n  const [rating, setRating] = useState(3);\r\n\r\n  const [open, setOpen] = useState(false); \r\n  const navigate = useNavigate();\r\n\r\n  const context = useContext(MoviesContext);\r\n\r\n  const handleSnackClose = (event) => {\r\n    setOpen(false);\r\n    navigate(\"/movies/favorites\");\r\n  };\r\n  \r\n  const defaultValues = {\r\n    author: \"\",\r\n    review: \"\",\r\n    agree: false,\r\n    rating: \"3\",\r\n  };\r\n  \r\n  const {\r\n    control,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm(defaultValues);\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie.id;\r\n    review.rating = rating;\r\n    // console.log(review);\r\n    context.addReview(movie, review);\r\n    setOpen(true); // NEW\r\n  };\r\n\r\n  return (\r\n    <Box component=\"div\" sx={styles.root}>\r\n      <Typography component=\"h2\" variant=\"h3\">\r\n        Write a review\r\n      </Typography>\r\n\r\n      <Snackbar\r\n        sx={styles.snack}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        onClose={handleSnackClose}\r\n      >\r\n        <MuiAlert\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          onClose={handleSnackClose}\r\n        >\r\n          <Typography variant=\"h4\">\r\n            Thank you for submitting a review\r\n          </Typography>\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <Controller\r\n          name=\"author\"\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              sx={{ width: \"40ch\" }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={onChange}\r\n              value={value}\r\n              id=\"author\"\r\n              label=\"Author's name\"\r\n              name=\"author\"\r\n              autoFocus\r\n            />\r\n          )}\r\n        />\r\n        {errors.author && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.author.message}\r\n          </Typography>\r\n        )}\r\n        <Controller\r\n          name=\"review\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Review cannot be empty.\",\r\n            minLength: { value: 10, message: \"Review is too short\" },\r\n          }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"review\"\r\n              value={value}\r\n              onChange={onChange}\r\n              label=\"Review text\"\r\n              id=\"review\"\r\n              multiline\r\n              minRows={10}\r\n            />\r\n          )}\r\n        />\r\n        {errors.review && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.review.message}\r\n          </Typography>\r\n        )}\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"rating\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              id=\"select-rating\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Rating Select\"\r\n              value={rating}\r\n              onChange={handleRatingChange}\r\n              helperText=\"Don't forget your rating\"\r\n            >\r\n              {ratings.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n        />\r\n\r\n        <Box sx={styles.buttons}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={styles.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={styles.submit}\r\n            onClick={() => {\r\n              reset({\r\n                author: \"\",\r\n                content: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;"],"names":["ratings","value","label","styles","root","marginTop","display","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","_ref","movie","rating","setRating","useState","open","setOpen","navigate","useNavigate","context","useContext","MoviesContext","handleSnackClose","event","control","formState","errors","handleSubmit","reset","useForm","author","review","agree","handleRatingChange","target","_jsxs","Box","component","sx","children","_jsx","Typography","variant","Snackbar","anchorOrigin","vertical","horizontal","onClose","MuiAlert","severity","onSubmit","movieId","id","addReview","noValidate","Controller","name","rules","required","defaultValue","render","_ref2","field","onChange","TextField","margin","autoFocus","message","minLength","_ref3","fullWidth","multiline","minRows","_ref4","select","helperText","map","option","MenuItem","buttons","Button","type","color","onClick","content"],"sourceRoot":""}