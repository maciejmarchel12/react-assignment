{"version":3,"file":"static/js/46.c697e542.chunk.js","mappings":"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","sources":["components/movieReviews/index.js","util.js","components/movieDetails/index.js"],"sourcesContent":["import React, { useEffect, useState }  from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/tmdb-api\";\r\nimport { excerpt } from \"../../util\";\r\n\r\nexport default function MovieReviews({ movie }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movie.id).then((reviews) => {\r\n      setReviews(reviews);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 550}} aria-label=\"reviews table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell >Author</TableCell>\r\n            <TableCell align=\"center\">Excerpt</TableCell>\r\n            <TableCell align=\"right\">More</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {reviews.map((r) => (\r\n            <TableRow key={r.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {r.author}\r\n              </TableCell>\r\n              <TableCell >{excerpt(r.content)}</TableCell>\r\n              <TableCell >\r\n              <Link\r\n                  to={`/reviews/${r.id}`}\r\n                  state={{\r\n                      review: r,\r\n                      movie: movie,\r\n                  }}\r\n                >\r\n                  Full Review\r\n                </Link>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import truncate from \"lodash/truncate\";\r\n\r\nexport function excerpt(string) {\r\n  return truncate(string, {    \r\n    length: 400, // maximum 400 characters\r\n    separator: /,?\\.* +/, // separate by spaces, including preceding commas and periods\r\n  });\r\n}","import React, { useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport MonetizationIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport StarRate from \"@mui/icons-material/StarRate\";\r\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport MovieReviews from \"../movieReviews\";\r\n\r\nconst root = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  flexWrap: \"wrap\",\r\n  listStyle: \"none\",\r\n  padding: 1.5,\r\n  margin: 0,\r\n};\r\nconst chip = { margin: 0.5 };\r\n\r\nconst MovieDetails = ({ movie }) => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h3\">\r\n        Overview\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        {movie.overview}\r\n      </Typography>\r\n\r\n      <Paper component=\"ul\" sx={{ ...root }} data-testid=\"genres\">\r\n  <li>\r\n    <Chip label=\"Genres\" sx={{ ...chip }} color=\"primary\" />\r\n  </li>\r\n  {movie.genres.map((g, index) => (\r\n    <li key={index}>\r\n      <Chip label={g.name} sx={{ ...chip }} />\r\n    </li>\r\n  ))}\r\n</Paper>\r\n\r\n<Paper component=\"ul\" sx={{ ...root }} data-testid=\"runtime\">\r\n  <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\r\n</Paper>\r\n\r\n<Paper component=\"ul\" sx={{ ...root }} data-testid=\"revenue\">\r\n  <Chip\r\n    icon={<MonetizationIcon />}\r\n    label={`${movie.revenue.toLocaleString()}`}\r\n  />\r\n</Paper>\r\n\r\n<Paper component=\"ul\" sx={{ ...root }} data-testid=\"votes\">\r\n  <Chip\r\n    icon={<StarRate />}\r\n    label={`${movie.vote_average} (${movie.vote_count})`}\r\n    data-testid=\"vote-average\"\r\n  />\r\n  <Chip label={`Released: ${movie.release_date}`} data-testid=\"release-date\" />\r\n</Paper>\r\n\r\n<Paper component=\"ul\" sx={{ ...root }} data-testid=\"production-countries\">\r\n      <li>\r\n        <Chip label=\"Production Countries\" sx={{ ...chip }} color=\"primary\" />\r\n      </li>\r\n        {movie.production_countries.map((pc, index) => (\r\n      <li key={index}>\r\n        <Chip label={pc.name} sx={{ ...chip }} />\r\n      </li>\r\n          ))}\r\n        </Paper>\r\n        {/* Similar Link */}\r\n        <Link to={`/movies/${movie.id}/similar`} style={{ textDecoration: 'none' }}>\r\n       <Fab\r\n        color=\"secondary\"\r\n        variant=\"extended\"\r\n        sx={{\r\n          position: 'fixed',\r\n          bottom: '1em',\r\n          right: '23em'\r\n        }}\r\n        data-testid=\"similar-button\" // Added data-testid attribute\r\n        >\r\n    <NavigationIcon />\r\n    Similar\r\n  </Fab>\r\n</Link>\r\n\r\n<Link to={`/movies/${movie.id}/recommended`} style={{ textDecoration: 'none' }}>\r\n  <Fab\r\n    color=\"primary\"\r\n    variant=\"extended\"\r\n    sx={{\r\n      position: 'fixed',\r\n      bottom: '1em',\r\n      right: '10em'\r\n    }}\r\n    data-testid=\"recommended-button\" // Added data-testid attribute\r\n  >\r\n    <NavigationIcon />\r\n    Recommended\r\n  </Fab>\r\n</Link>\r\n\r\n<Fab\r\n  color=\"secondary\"\r\n  variant=\"extended\"\r\n  onClick={() => setDrawerOpen(true)}\r\n  sx={{\r\n    position: 'fixed',\r\n    bottom: '1em',\r\n    right: '1em'\r\n  }}\r\n  data-testid=\"reviews-button\" // Added data-testid attribute\r\n>\r\n  <NavigationIcon />\r\n  Reviews\r\n</Fab>\r\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n        <MovieReviews movie={movie} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;"],"names":["MovieReviews","_ref","movie","reviews","setReviews","useState","useEffect","getMovieReviews","id","then","_jsx","TableContainer","component","Paper","children","_jsxs","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","r","scope","author","string","content","truncate","length","separator","Link","to","concat","state","review","root","display","justifyContent","flexWrap","listStyle","padding","margin","chip","drawerOpen","setDrawerOpen","_Fragment","Typography","variant","overview","Chip","label","color","genres","g","index","name","icon","AccessTimeIcon","runtime","MonetizationIcon","revenue","toLocaleString","StarRate","vote_average","vote_count","release_date","production_countries","pc","style","textDecoration","Fab","position","bottom","right","NavigationIcon","onClick","Drawer","anchor","open","onClose"],"sourceRoot":""}